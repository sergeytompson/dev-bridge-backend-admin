# Generated by Django 4.2.1 on 2023-06-18 17:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import emails.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название вложения')),
                ('attachment', models.FileField(max_length=200, upload_to='emails/attachment/', verbose_name='вложение')),
                ('is_template', models.BooleanField(default=False, verbose_name='является шаблоном')),
            ],
            options={
                'verbose_name': 'вложение',
                'verbose_name_plural': 'вложения',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название шаблона')),
                ('template', models.FileField(max_length=200, upload_to='emails/templates/', validators=[emails.validators.MimeTypeValidator({'html': 'text/html'})], verbose_name='HTML шаблон письма')),
            ],
            options={
                'verbose_name': 'шаблон',
                'verbose_name_plural': 'шаблоны',
                'ordering': ('name',),
                'indexes': [models.Index(fields=['name'], name='template_name_idx')],
            },
        ),
        migrations.CreateModel(
            name='SentEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_url', models.URLField(blank=True, verbose_name='ссылка для подтверждения')),
                ('is_high_priority', models.BooleanField(default=False, verbose_name='высокий приоритет')),
                ('is_email_to_confirm', models.BooleanField(default=False, verbose_name='письмо для подтверждения почты')),
                ('is_email_to_anonym', models.BooleanField(default=False, verbose_name='письмо анонимным пользователям')),
                ('created', models.DateTimeField(verbose_name='создано')),
                ('sent', models.DateTimeField(auto_now_add=True, verbose_name='отправлено')),
                ('attachments', models.ManyToManyField(blank=True, related_name='%(class)s_set', to='emails.attachment', verbose_name='вложения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipient_sent_emails', to=settings.AUTH_USER_MODEL, verbose_name='получатель')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to='emails.template', verbose_name='шаблон')),
            ],
            options={
                'verbose_name': 'отправленное письмо',
                'verbose_name_plural': 'отправленные письма',
            },
        ),
        migrations.CreateModel(
            name='NotSentEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_url', models.URLField(blank=True, verbose_name='ссылка для подтверждения')),
                ('is_high_priority', models.BooleanField(default=False, verbose_name='высокий приоритет')),
                ('is_email_to_confirm', models.BooleanField(default=False, verbose_name='письмо для подтверждения почты')),
                ('is_email_to_anonym', models.BooleanField(default=False, verbose_name='письмо анонимным пользователям')),
                ('created', models.DateTimeField(verbose_name='создано')),
                ('sending_attempt', models.DateTimeField(auto_now_add=True, verbose_name='отправлено')),
                ('attachments', models.ManyToManyField(blank=True, related_name='%(class)s_set', to='emails.attachment', verbose_name='вложения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipient_not_sent_emails', to=settings.AUTH_USER_MODEL, verbose_name='получатель')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to='emails.template', verbose_name='шаблон')),
            ],
            options={
                'verbose_name': 'неотправленное письмо',
                'verbose_name_plural': 'неотправленные письма',
            },
        ),
        migrations.CreateModel(
            name='EmailToSend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_url', models.URLField(blank=True, verbose_name='ссылка для подтверждения')),
                ('is_high_priority', models.BooleanField(default=False, verbose_name='высокий приоритет')),
                ('is_email_to_confirm', models.BooleanField(default=False, verbose_name='письмо для подтверждения почты')),
                ('is_email_to_anonym', models.BooleanField(default=False, verbose_name='письмо анонимным пользователям')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='создано')),
                ('attachments', models.ManyToManyField(blank=True, related_name='%(class)s_set', to='emails.attachment', verbose_name='вложения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
                ('recipients', models.ManyToManyField(blank=True, related_name='recipient_emails_to_send', to=settings.AUTH_USER_MODEL, verbose_name='получатели')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_set', to='emails.template', verbose_name='шаблон')),
            ],
            options={
                'verbose_name': 'письмо для отправки',
                'verbose_name_plural': 'письма для отправки',
                'ordering': ('is_high_priority',),
            },
        ),
        migrations.AddIndex(
            model_name='attachment',
            index=models.Index(fields=['name'], name='attachment_name_idx'),
        ),
        migrations.AddConstraint(
            model_name='emailtosend',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('confirm_url__exact', ''), ('is_email_to_confirm__exact', False)), models.Q(('confirm_url__regex', '.+'), ('is_email_to_confirm__exact', True)), _connector='OR'), name='url_for_email_to_confirm', violation_error_message='Письма для подтверждения почты должны включать ссылку, остальные письма - не должны.'),
        ),
        migrations.AddConstraint(
            model_name='emailtosend',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('author__isnull', True), models.Q(('is_email_to_confirm__exact', True), ('is_email_to_anonym', True), _connector='OR')), models.Q(('author__isnull', False), ('is_email_to_confirm__exact', False), ('is_email_to_anonym', False)), _connector='OR'), name='empty_author_for_email_to_confirm_and_to_anonym', violation_error_message='В письмах с подтверждением почты и в письмах для анонимных юзеров автор указывться не должен, в остальных письмах его указывать обязательно.'),
        ),
        migrations.AddConstraint(
            model_name='emailtosend',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('is_email_to_anonym__exact', True), ('is_email_to_confirm__exact', False)), models.Q(('is_email_to_anonym__exact', False), ('is_email_to_confirm__exact', True)), models.Q(('is_email_to_anonym__exact', False), ('is_email_to_confirm__exact', False)), _connector='OR'), name='email_to_confirm_and_to_anonym_cant_be_true_together', violation_error_message='Письмо для анонимных юзеров не может быть письмом для подтвеждения почты (и наоборот).'),
        ),
    ]
